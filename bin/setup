#!/usr/bin/env ruby
require "fileutils"
require "readline"
require "uri"

# path to your application root.
APP_ROOT = File.expand_path("..", __dir__)

def system!(*args)
  system(*args) || abort("\n== Command #{args} failed ==")
end

FileUtils.chdir APP_ROOT do
  connection_string = Readline.readline("Enter the database connection string given to you: ").to_s.strip

  if connection_string.empty?
    puts "You must provide a database connection string."
    exit 1
  end

  connection_uri = URI(connection_string)
  connection_uri.host = "host.docker.internal" if connection_uri.host == "localhost"

  File.open("config/database.yml", "w") do |file|
    file.write("development:\n")
    file.write("  url: <%= ENV.fetch('DATABASE_URL', '#{connection_uri}') %>\n")
  end

  if `type docker`.include?("not found")
    puts "Cannot find docker command line tool. Set up your ruby version manager of choice and run bundle install."
    puts "You will also need a local psql client, which can be installed with homebrew (postgresql@15) or apt (postgresql-client-15)."
    exit
  end

  puts "Building docker image..."
  system! "docker build -t devdbapp-rails ."

  File.open("bin/console", "w") do |file|
    file.write("#!/bin/bash\n\n")
    file.write("docker run --rm -it -v $PWD:/opt/app -w /opt/app --env-file .env.docker devdbapp-rails\n")
  end
  File.chmod(0755, "bin/console")

  old_umask = File.umask(0077)
  File.open(".env.docker", "w") do |file|
    file.write("DATABASE_URL=#{connection_uri}\n")
    file.write("IRB_USE_AUTOCOMPLETE=false\n")
  end
  File.umask(old_umask)

  File.open("bin/dbconsole", "w") do |file|
    file.write("#!/bin/bash\n\n")
    file.write("docker run --rm -it -v $PWD:/opt/app -w /opt/app --env-file .env.docker devdbapp-rails rails dbconsole -p\n")
  end
  File.chmod(0755, "bin/dbconsole")

  puts "Run bin/dbconsole to connect to your database."
end
